## -*- mode: python; coding: utf-8 -*-

DESCRIPTION="DMF Bufferbloat Measurement"
AGGREGATOR='timeseries'
STEP_SIZE=0.1
SOCKET_STATS=True
IP_VERSION=4
DELAY=0
TOTAL_LENGTH=LENGTH

FORMAT="plot"
#TITLE="cf laptop, wifi, warp enabled, gcp"
#TITLE="my title"
#OUTPUT=cflaptop-wifi-warp-enabled-gcp.png
OUTPUT="flent-out.png"

DEFAULTS={'PLOT': 'all_plots'}

ZERO_Y="True"
FIG_WIDTH=12.0
FIG_HEIGHT=12.0

DATA_SETS = o([

        ('TCP download',
         {'host': HOST, 'test': 'TCP_MAERTS', 'delay': DELAY, 'length': LENGTH,
          'units': 'Mbps', 'runner': 'netperf_demo'}),

        ('TCP download::tcps_rtt',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download::tcps_lost',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download::tcps_retranst',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download::tcps_bytes_sent',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download::tcps_bytes_retrans',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download::tcpr_bytes_received',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download::tcp_bytes_buffered',
         {'apply_to': ['TCP download::tcps_bytes_sent', 'TCP download::tcps_bytes_retrans', 'TCP download::tcpr_bytes_received'],
         'units': 'count', 'runner': 'diff3'}),

        ])

PLOTS = o([
    ('tcp_throughput',
     {'description': 'TCP Throughput',
      'type': 'timeseries',
      'series': [
                 {'data': 'TCP download',
                  'label': 'Throughput'}
                ]}),

    ('tcp_rtt',
     {'description': 'TCP RTT',
             'type': 'timeseries',
      'axis_labels': ['ms'],
           'series': [
                      {'data': 'TCP download::tcps_rtt',
                       'label': 'RTT'}
                     ]}),

    ('tcp_lost',
     {'description': 'TCP Packets Lost',
      'type': 'timeseries',
      'axis_labels': ['packets'],
      'series': [
                 {'data': 'TCP download::tcps_lost',
                  'label': 'Packets Lost'}
                ]}),

    ('tcp_retrans',
     {'description': 'TCP Total Packets Retransmitted',
      'type': 'timeseries',
      'axis_labels': ['packets'],
      'series': [
                 {'data': 'TCP download::tcps_retranst',
                  'label': 'Retransmitted'}
                ]}),

    ('tcp_bytes_retrans',
     {'description': 'TCP Total Bytes Retransmitted',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': 'TCP download::tcps_bytes_retrans',
                  'label': 'Total Bytes Retransmitted'}
                ]}),

    ('tcp_bytes_sent',
     {'description': 'TCP Total Bytes Sent',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': 'TCP download::tcps_bytes_sent',
                  'label': 'Total Bytes Sent'}
                ]}),

    ('tcp_bytes_received',
     {'description': 'TCP Total Bytes Received',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': 'TCP download::tcpr_bytes_received',
                  'label': 'Total Bytes Received'}
                ]}),

    ('tcp_bytes_buffered',
     {'description': 'TCP Bytes Buffered',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': 'TCP download::tcp_bytes_buffered',
                  'label': 'Total Buffered'}
                ]}),

    ('all_plots',
     {       'type': 'meta',
     'description' : 'dmf_tcp_1down_bufferbloat.conf',
         'subplots': ('tcp_throughput', 'tcp_bytes_buffered', 'tcp_bytes_sent', 'tcp_bytes_retrans', 'tcp_bytes_received' )})

    ])

#           'cutoff': (0,-DELAY),
#include("common.inc")

