## -*- mode: python; coding: utf-8 -*-

DESCRIPTION="DMF Bufferbloat Measurement 2cc"
AGGREGATOR='timeseries'
STEP_SIZE=0.1
SOCKET_STATS=True
IP_VERSION=4
#DELAY=0
TOTAL_LENGTH=LENGTH
LENGTH_EACH=int(LENGTH/2)

FORMAT="plot"
OUTPUT="DEFAULT.png"
DEFAULTS={'PLOT': 'all_plots'}
ZERO_Y="True"
FIG_WIDTH=12.0
FIG_HEIGHT=12.0

DATA_SETS = o([

        ('TCP download bbr',
         {'host': HOST, 'test': 'TCP_MAERTS', 'delay': 0, 'length': LENGTH_EACH,
          'cong_control': 'bbr',
          'units': 'Mbps', 'runner': 'netperf_demo'}),

        ('TCP download cubic',
         {'host': HOST, 'test': 'TCP_MAERTS', 'delay': LENGTH_EACH, 'length': LENGTH_EACH,
          'cong_control': 'cubic',
          'units': 'Mbps', 'runner': 'netperf_demo'}),

        ('TCP download bbr::tcps_bytes_sent',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download bbr::tcps_bytes_retrans',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download bbr::tcpr_bytes_received',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download bbr::tcp_bytes_buffered',
         {'apply_to': ['TCP download bbr::tcps_bytes_sent', 'TCP download bbr::tcps_bytes_retrans', 'TCP download bbr::tcpr_bytes_received'],
         'units': 'count', 'runner': 'diff3'}),

        ('TCP download cubic::tcps_bytes_sent',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download cubic::tcps_bytes_retrans',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download cubic::tcpr_bytes_received',
         {'units': 'count', 'runner': 'null'}),

        ('TCP download cubic::tcp_bytes_buffered',
         {'apply_to': ['TCP download cubic::tcps_bytes_sent', 'TCP download cubic::tcps_bytes_retrans', 'TCP download cubic::tcpr_bytes_received'],
         'units': 'count', 'runner': 'diff3'}),

        ])

PLOTS = o([
    ('tcp_throughput',
     {'description': 'TCP Throughput',
      'type': 'timeseries',
      'series': [
                 {'data': glob('TCP download *'),
                  'label': 'Throughput'}
                ]}),

    ('tcp_bytes_sent',
     {'description': 'TCP Total Bytes Sent',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': glob('TCP download *::tcps_bytes_sent'),
                  'label': 'Total Bytes Sent'}
                ]}),

    ('tcp_bytes_retrans',
     {'description': 'TCP Total Bytes Retransmitted',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': glob('TCP download *::tcps_bytes_retrans'),
                  'label': 'Total Bytes Retransmitted'}
                ]}),

    ('tcp_bytes_received',
     {'description': 'TCP Total Bytes Received',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': glob('TCP download *::tcpr_bytes_received'),
                  'label': 'Total Bytes Received'}
                ]}),

    ('tcp_bytes_buffered',
     {'description': 'TCP Bytes Buffered',
      'type': 'timeseries',
      'axis_labels': ['bytes'],
      'series': [
                 {'data': glob('TCP download *::tcp_bytes_buffered'),
                  'label': 'Total Buffered'}
                ]}),

    ('all_plots',
     {       'type': 'meta',
     'description' : 'dmf_tcp_1down_bufferbloat_2cc.conf',
         'subplots': ('tcp_throughput', 'tcp_bytes_buffered', 'tcp_bytes_sent', 'tcp_bytes_retrans', 'tcp_bytes_received' )})

    ])

